#!/usr/bin/env python3
"""Setup rosbag to record spot outputs."""
import click
import subprocess
import pathlib


@click.command()
@click.option(
    "--cameras",
    "-c",
    multiple=True,
    help="cameras to record",
    default=["frontright", "frontleft"],
)
@click.option("--rotated", "-r", is_flag=True, help="record rotated")
@click.option(
    "--extra-topics",
    "-e",
    multiple=True,
    help="other topics",
)
@click.option("--name", "-n", default="/hydra_llm_node")
@click.option("--output", "-o", default=None)
def main(cameras, rotated, extra_topics, name, output):
    """Launch rosbag with args."""
    topics = ["/tf", "/tf_static", f"{name}/backend/dsg"]
    for camera in cameras:
        if rotated:
            topics.append(f"/spot/{camera}/color/rotated/image_raw")
            topics.append(f"/spot/{camera}/color/rotated/camera_info")
            topics.append(f"/spot/{camera}/depth/registered/image_rect")
            topics.append(f"/spot/{camera}/depth/registered/camera_info")
        else:
            topics.append(f"/spot/{camera}/color/camera_info")
            topics.append(f"/spot/{camera}/color/image_raw")
            topics.append(f"/spot/{camera}/depth/camera_info")
            topics.append(f"/spot/{camera}/depth/image_rect")

    topics += extra_topics

    args = ["rosbag", "record"] + topics
    if output is not None:
        output = pathlib.Path(output).expanduser().absolute()
        args += ["-o", str(output)]

    subprocess.call(args)


if __name__ == "__main__":
    main()
